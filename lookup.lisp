(in-package :cl-smaw)

(defun track-lookup-parser (track-lookup-object)
  (let* ((toplevel-keys (make-plist track-lookup-object :name :available 
				    :popularity :length :href :track-number)))
    (setf (getf toplevel-keys :album)
	  (make-plist (gethash "album" track-lookup-object)
		      :name :released :href)
	  (getf toplevel-keys :external-ids)
	  (mapcar #'(lambda (each) (make-plist each :type :id))
			    (gethash "external-ids" track-lookup-object))
	  (getf toplevel-keys :artists)
	  (mapcar #'(lambda (each) (make-plist each :href :name))
		  (gethash "artists" track-lookup-object))
	  (getf toplevel-keys :availability)
	  (make-plist (gethash "availability" track-lookup-object) :territories))
    toplevel-keys))
